---
import Primarybtn from "./Primarybtn.astro"
---
<div>

  <h2 class="flex justify-center ">LET'S PLAY CARDS</h2>
<div class="flex flex-wrap justify-center gap-4 mx-auto max-w-screen-xl px-4 lg:px-16">

  <div class="relative w-full max-w-[600px] h-[385px] flex flex-col justify-center rounded-3xl overflow-hidden pt-20 draggable-card" draggable="true">
    <div class="hover08 rounded-lg overflow-hidden shadow-lg max-w-sm mx-auto relative">
      <figure class="relative">
        <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
      </figure>
    </div>
  </div>

  <div class="hover08 rounded-lg overflow-hidden shadow-lg max-w-sm mx-auto relative draggable-card" draggable="true">
    <figure class="relative">
      <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
    </figure>
  </div>

  <div class="hover08 rounded-lg overflow-hidden shadow-lg max-w-sm mx-auto relative draggable-card" draggable="true">
    <figure class="relative">
      <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
    </figure>
  </div>

</div>

<!-- ------------------------------------------------------ -->

<div class="flex flex-wrap justify-center gap-4 mx-auto max-w-screen-xl px-4 lg:px-16 pt-8">

  <div class="relative w-full max-w-[600px] h-[485px] flex flex-col justify-center rounded-3xl overflow-hidden pt-20 draggable-card" draggable="true">
    <div class="hover08 rounded-lg overflow-hidden shadow-lg drop-shadow-2xl shadow-accent max-w-sm mx-auto relative">
      <figure class="relative">
        <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
      </figure>
    </div>
  </div>

  <div class="hover08 rounded-lg overflow-hidden shadow-lg max-w-sm mx-auto relative draggable-card" draggable="true">
    <figure class="relative">
      <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
    </figure>
  </div> 
  
  <div class="relative w-full max-w-[600px] h-[385px] flex flex-col justify-center rounded-3xl overflow-hidden pt-20 draggable-card" draggable="true">
    <div class="hover08 rounded-lg overflow-hidden shadow-lg max-w-sm mx-auto relative">
      <figure class="relative">
        <img src="img/geranimo-wYy3rvvgjAU-unsplash.jpg" alt="Description" class="w-full h-auto object-cover grayscale transition duration-300 ease-in-out hover:grayscale-0">
      </figure>
    </div>
  </div>

</div>
</div>
<!-- ----------------------------------------------------- -->
<style>
  .draggable-card {
    transition: transform 0.3s ease, opacity 0.3s ease;
    opacity: 1;
  }
  
  .draggable-card.dragging {
    opacity: 0.5; /* Reduce opacity when dragging */
    transform: scale(1.05); /* Slightly enlarge the card while dragging */
  }

  .draggable-card.dropping {
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
</style>

<!-- ------------------------------------------------------ -->

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.draggable-card');
    let draggedCard = null;

    cards.forEach(card => {
      card.addEventListener('dragstart', function () {
        draggedCard = this;
        this.classList.add('dragging');
        setTimeout(() => {
          this.style.display = 'none'; // Hide the card temporarily
        }, 0);
      });

      card.addEventListener('dragend', function () {
        setTimeout(() => {
          this.style.display = 'block'; // Show the card again after drop
          this.classList.remove('dragging');
          draggedCard = null;
        }, 0);
      });

      card.addEventListener('dragover', function (e) {
        e.preventDefault();
      });

      card.addEventListener('drop', function () {
        if (draggedCard && draggedCard !== this) {
          const container = this.parentNode;
          container.insertBefore(draggedCard, this);

          // Smooth transition when the card is dropped
          draggedCard.classList.add('dropping');
          setTimeout(() => draggedCard.classList.remove('dropping'), 300);
        }
      });
    });
  });
</script>
