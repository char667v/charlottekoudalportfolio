---
import { Image } from 'astro:assets'; 
import animationImage from "../images/animation.webp"; 
import atkImage from "../images/atk.webp"; 
import dcdImage from "../images/dcd.webp"; 
import itmvImage from "../images/itmv.webp"; 
import portfolioImage from "../images/portfolio.webp"; 
---
<div class="photos-section mt-32">
    <div class="drag-area">
        <div class="cards cursor-grab absolute" style="top:-105px; left: 5%;" data-url="https://atk-website.netlify.app/">
            <article id="card1">
                <Image src={atkImage} alt="Cover for mit Arbejdernes Tennis Klub" class="rounded-lg transition-all duration-300 hover:grayscale-0 shadow-[0_4px_15px_rgba(255,255,0,0.8)] w-[60%] md:w-[300px] h-auto" />
            </article>
        </div>

        <!-- <div class="cards cursor-grab absolute" style="top: -48px; left: 75.6%;" data-url="https://atk-website.netlify.app/">
            <article id="card2">
                <Image src={animationImage} alt="Cover for mit Arbejdernes Tennis Klub" class="rounded-lg transition-all duration-300 hover:grayscale-0 shadow-[0_4px_15px_rgba(255,255,0,0.8)] w-[60%] md:w-[250px] h-auto" />
            </article>
        </div> -->

        <div class="cards cursor-grab absolute" style="top: -38px; left: 45%;" data-url="https://digitalskraldedaggr4.netlify.app">
            <article id="card3">
                <Image src={dcdImage} alt="Cover for Digital cleanup day" class="rounded-lg transition-all duration-300 hover:grayscale-0 shadow-[0_4px_15px_rgba(255,255,0,0.8)] w-[90%] md:w-[500px] h-auto" />
            </article>
        </div>

        <div class="cards cursor-grab absolute" style="top: 20px; left: 15%;" data-url="https://your-link-here.com">
            <article id="card4">
                <Image src={itmvImage} alt="Cover for I trÃ¥d med verden" class="rounded-lg transition-all duration-300 hover:grayscale-0 shadow-[0_4px_15px_rgba(255,255,0,0.8)] w-[50%] md:w-[200px] h-auto" />
            </article>
        </div>

        <!-- <div class="cards cursor-grab absolute" style="top: 53px; left: 7%;" data-url="https://your-link-here.com">
            <article id="card5">
                <Image src={portfolioImage} alt="Cover for min portfolio" class="rounded-lg transition-all duration-300 hover:grayscale-0 shadow-[0_4px_15px_rgba(255,255,0,0.8)] w-[40%] md:w-[150px] h-auto" />
            </article>
        </div> -->
    </div>
</div>

<style>
    .drag-area {
        height: 10vh;
        width: 100vw;
        position: relative;
    }
    .cards {
        position: absolute;
    }
    @media (max-width: 768px) {
    .drag-area {
        height: 2vh;
    }
    }
</style>

<script>
    const draggables = document.querySelectorAll('.cards');

    draggables.forEach(draggable => {
        let linkUrl = draggable.getAttribute('data-link'); // Get link from data attribute
        let isDragging = false; // Track dragging state

        draggable.addEventListener('mousedown', (e) => {
            e.preventDefault(); // Prevent default behavior to avoid text selection

            const dragArea = document.querySelector('.drag-area');
            const dragAreaRect = dragArea.getBoundingClientRect();

            // Set offsets relative to the mouse position
            const offsetX = e.clientX - draggable.getBoundingClientRect().left;
            const offsetY = e.clientY - draggable.getBoundingClientRect().top;

            draggable.style.cursor = 'grabbing'; // Change cursor on grab

            // Update position immediately on mouse move
            function mouseMoveHandler(e) {
                isDragging = true; // Set dragging state to true

                // Calculate new position
                let newX = e.clientX - offsetX; // Adjust for drag area position
                let newY = e.clientY - offsetY; // Adjust for drag area position

                // Constrain the position within the drag area
                newX = Math.max(0, Math.min(newX, dragAreaRect.width - draggable.offsetWidth));
                newY = Math.max(0, Math.min(newY, dragAreaRect.height - draggable.offsetHeight));

                draggable.style.left = newX + 'px';
                draggable.style.top = newY + 'px';
            }

            function mouseUpHandler() {
                draggable.style.cursor = 'grab'; // Reset cursor
                document.removeEventListener('mousemove', mouseMoveHandler);
                document.removeEventListener('mouseup', mouseUpHandler);

                // Check if it was a click, if not, do not open the link
                if (!isDragging) {
                    window.open(linkUrl, '_blank'); // Open the link in a new tab
                }
                isDragging = false; // Reset dragging state
            }

            // Immediately start moving on mousedown
            document.addEventListener('mousemove', mouseMoveHandler);
            document.addEventListener('mouseup', mouseUpHandler);
        });
    });
</script>

